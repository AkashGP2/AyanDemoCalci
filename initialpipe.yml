trigger:
  - dev

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  solution: '**/.sln'
  project: '**/.csproj'

steps:
  - task: UseDotNet@2
    displayName: 'Installing .Net6'
    inputs:
      version: '6.x'

  - task: NuGetToolInstaller@1
    name: 'NuGetInstaller'
    displayName: 'NuGet Tool Installation'
  
  - task: NuGetCommand@2
    name: 'NuGetRestore'
    displayName: 'NuGet Restore Packages'
    inputs:
      command: 'restore' 
      restoreSolution: '$(solution)'
      feedsTouse: 'select'

  - task: DotNetCoreCLI@2
    displayName: '.Net Build'
    inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
  
  - task: DotNetCoreCLI@2
    name: 'NuGetTest'
    displayName: 'Testing the App'
    inputs: 
      command: 'test'
      project: '$(solution)'
      arguments: '--configuration $(buildConfiguration)'
    
  - task: DotNetCoreCLI@2
    name: 'publish'
    displayName: 'publish'
    inputs:
      command: 'publish'
      publishWebprojects: false
      projects: '$(project)'
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: true

  
# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build
  - task: PublishPipelineArtifact@1
    displayName: 'Pushing Artufacts'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'Calci-CS-Build'
      
 # - task: PublishBuildArtifacts@1
 #   name: 'publishBuildArtifact'
 #   displayName: 'publish the build artifacts to pipeline'
 #  inputs:
 #    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
 #     ArtifactName: 'CalciC#Build'
 #    publishLocation: 'Container'



